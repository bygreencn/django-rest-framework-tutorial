#!wing
#!version=6.0
##################################################################
# Wing IDE project file : User-specific branch                   #
##################################################################
[user attributes]
debug.err-values = {loc('manage.py'): {}}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'oNBNuNbh83eefzdmD1vAhmoKoK'\
        'o6R37F',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.1468428781204112,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [(0,),
        (0,
         3)],
                                 'selected-nodes': [(0,
        3)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('file:C:/Miniconda2/Lib/ConfigParser.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Miniconda2/Lib/ConfigParser.py'),
                      'ConfigParser')]},
        loc('file:C:/Miniconda2/Lib/base64.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Miniconda2/Lib/base64.py'),
                      'b16decode')]},
        loc('file:C:/Miniconda2/Lib/copy.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Miniconda2/Lib/copy.py'),
                      'copy')]},
        loc('file:C:/Miniconda2/Lib/copy_reg.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Miniconda2/Lib/copy_reg.py'),
                      'add_extension')]},
        loc('file:C:/Miniconda2/Lib/ctypes/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Miniconda2/Lib/ctypes/__init__.py'),
                      'ARRAY')]},
        loc('file:C:/Miniconda2/Lib/encodings/__init__.py'): {'expanded-node'\
        's': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Miniconda2/Lib/encodings/ascii.py'),
                      '')]},
        loc('file:C:/Miniconda2/Lib/encodings/utf_8.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Miniconda2/Lib/encodings/utf_8.py'),
                      'decode')]},
        loc('file:C:/Miniconda2/Lib/genericpath.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Miniconda2/Lib/genericpath.py'),
                      'commonprefix')]},
        loc('file:C:/Miniconda2/Lib/gzip.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Miniconda2/Lib/gzip.py'),
                      'FCOMMENT')]},
        loc('file:C:/Miniconda2/Lib/httplib.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Miniconda2/Lib/httplib.py'),
                      'ACCEPTED')]},
        loc('file:C:/Miniconda2/Lib/logging/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Miniconda2/Lib/logging/__init__.py'),
                      'addLevelName')]},
        loc('file:C:/Miniconda2/Lib/ntpath.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Miniconda2/Lib/ntpath.py'),
                      'abspath')]},
        loc('file:C:/Miniconda2/Lib/os.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Miniconda2/Lib/os.py'),
                      'environ')]},
        loc('file:C:/Miniconda2/Lib/re.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Miniconda2/Lib/re.py'),
                      'compile')]},
        loc('file:C:/Miniconda2/Lib/site-packages/BeautifulSoup.py'): {'expa'\
        'nded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Miniconda2/Lib/site-packages/BeautifulSoup.py'),
                      'BeautifulSOAP')]},
        loc('file:C:/Miniconda2/Lib/site-packages/PIL/BmpImagePlugin.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Miniconda2/Lib/site-packages/PIL/BmpImagePlugin.py'),
                      'BIT2MODE')]},
        loc('file:C:/Miniconda2/Lib/site-packages/PIL/Image.py'): {'expanded'\
        '-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Miniconda2/Lib/site-packages/PIL/Image.py'),
                      'ADAPTIVE')]},
        loc('file:C:/Miniconda2/Lib/site-packages/PIL/ImageFile.py'): {'expa'\
        'nded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Miniconda2/Lib/site-packages/PIL/ImageFile.py'),
                      'ERRORS')]},
        loc('file:C:/Miniconda2/Lib/site-packages/PIL/ImageFont.py'): {'expa'\
        'nded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Miniconda2/Lib/site-packages/PIL/ImageFont.py'),
                      'FreeTypeFont')]},
        loc('file:C:/Miniconda2/Lib/site-packages/PIL/_util.py'): {'expanded'\
        '-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Miniconda2/Lib/site-packages/PIL/_util.py'),
                      'deferred_error')]},
        loc('file:C:/Miniconda2/Lib/site-packages/cv.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('file:C:/Miniconda2/Lib/site-packages/gevent/builtins.py'): {'ex'\
        'panded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('file:C:/Miniconda2/Lib/site-packages/gevent/builtins.py'),
                             '__target__')]],
        'top-node': [('generic attribute',
                      loc('file:C:/Miniconda2/Lib/site-packages/gevent/builtins.py'),
                      '_allowed_module_name_types')]},
        loc('file:C:/Miniconda2/Lib/site-packages/libtiff/libtiff_ctypes.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Miniconda2/Lib/site-packages/libtiff/libtiff_ctypes.py'),
                      'add_tags')]},
        loc('file:C:/Miniconda2/Lib/site-packages/matplotlib/image.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Miniconda2/Lib/site-packages/matplotlib/image.py'),
                      'AxesImage')]},
        loc('file:C:/Miniconda2/Lib/site-packages/matplotlib/pyplot.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Miniconda2/Lib/site-packages/matplotlib/pyplot.py'),
                      'acorr')]},
        loc('file:C:/Miniconda2/Lib/site-packages/mmringbuffer/collections.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Miniconda2/Lib/site-packages/mmringbuffer/collections.py'),
                      'MemMapRingBuffer')]},
        loc('file:C:/Miniconda2/Lib/site-packages/pathlib.py'): {'expanded-n'\
        'odes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Miniconda2/Lib/site-packages/pathlib.py'),
                      'basestring')]},
        loc('file:C:/Miniconda2/Lib/site-packages/pathlib2.py'): {'expanded-'\
        'nodes': [],
        'selected-nodes': [[('class def',
                             loc('file:C:/Miniconda2/Lib/site-packages/pathlib2.py'),
                             'Path')]],
        'top-node': [('generic attribute',
                      loc('file:C:/Miniconda2/Lib/site-packages/pathlib2.py'),
                      'intern')]},
        loc('file:C:/Miniconda2/Lib/site-packages/pygccxml/__init__.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Miniconda2/lib/site-packages/pygccxml/binary_parsers/__init__.py'),
                      '')]},
        loc('file:C:/Miniconda2/Lib/site-packages/pygpu-0.6.5-py2.7-win-amd64.egg/pygpu/blas.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Users/sui/AppData/Local/Wing IDE 6/pi-cache/2.7/C/Miniconda2/lib/site-packages/pygpu-0.6.5-py2.7-win-amd64.egg/pygpu/blas.pi'),
                      'dot')]},
        loc('file:C:/Miniconda2/Lib/site-packages/pyplusplus/__init__.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('file:C:/Miniconda2/Lib/site-packages/pyplusplus/code_creators/module.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('file:C:/Miniconda2/Lib/site-packages/pyplusplus/module_builder/builder.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Miniconda2/Lib/site-packages/pyplusplus/module_builder/builder.py'),
                      'module_builder_t')]},
        loc('file:C:/Miniconda2/Lib/site-packages/pyqtgraph/GraphicsScene/GraphicsScene.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Miniconda2/Lib/site-packages/pyqtgraph/GraphicsScene/GraphicsScene.py'),
                      'GraphicsScene')]},
        loc('file:C:/Miniconda2/Lib/site-packages/pyqtgraph/Qt.py'): {'expan'\
        'ded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Miniconda2/Lib/site-packages/pyqtgraph/Qt.py'),
                      'isQObjectAlive')]},
        loc('file:C:/Miniconda2/Lib/site-packages/pyqtgraph/functions.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Miniconda2/Lib/site-packages/pyqtgraph/functions.py'),
                      'affineSlice')]},
        loc('file:C:/Miniconda2/Lib/site-packages/pyqtgraph/graphicsItems/ImageItem.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Miniconda2/Lib/site-packages/pyqtgraph/graphicsItems/ImageItem.py'),
                      'ImageItem')]},
        loc('file:C:/Miniconda2/Lib/site-packages/pyqtgraph/graphicsItems/ROI.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('file:C:/Miniconda2/Lib/site-packages/pyqtgraph/graphicsItems/ROI.py'),
                             'RectROI')]],
        'top-node': [('class def',
                      loc('file:C:/Miniconda2/Lib/site-packages/pyqtgraph/graphicsItems/ROI.py'),
                      'CircleROI')]},
        loc('file:C:/Miniconda2/Lib/site-packages/pyqtgraph/widgets/ColorButton.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('file:C:/Miniconda2/Lib/site-packages/pyqtgraph/widgets/ColorButton.py'),
                             '__all__')]],
        'top-node': [('class def',
                      loc('file:C:/Miniconda2/Lib/site-packages/pyqtgraph/widgets/ColorButton.py'),
                      'ColorButton')]},
        loc('file:C:/Miniconda2/Lib/site-packages/pyqtgraph/widgets/GraphicsView.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Miniconda2/Lib/site-packages/pyqtgraph/widgets/GraphicsView.py'),
                      'GraphicsView')]},
        loc('file:C:/Miniconda2/Lib/site-packages/six.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Miniconda2/Lib/site-packages/six.py'),
                      'add_metaclass')]},
        loc('file:C:/Miniconda2/Lib/site-packages/theano/compile/function_module.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Miniconda2/Lib/site-packages/theano/compile/function_module.py'),
                      'AliasedMemoryError')]},
        loc('file:C:/Miniconda2/Lib/site-packages/theano/configdefaults.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Miniconda2/Lib/site-packages/theano/configdefaults.py'),
                      'compiledir_format_dict')]},
        loc('file:C:/Miniconda2/Lib/site-packages/xlrd/__init__.py'): {'expa'\
        'nded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Miniconda2/Lib/site-packages/xlrd/biffh.py'),
                      '')]},
        loc('file:C:/Miniconda2/Lib/site.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Miniconda2/Lib/site.py'),
                      'abs__file__')]},
        loc('file:C:/Miniconda2/Lib/socket.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Program Files (x86)/Wing IDE 6.0/resources/builtin-pi-files/2.7/socket.pi'),
                      'AF_APPLETALK')]},
        loc('file:C:/Miniconda2/Lib/string.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Miniconda2/Lib/string.py'),
                      'ascii_letters')]},
        loc('file:C:/Miniconda2/Lib/urllib2.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Miniconda2/Lib/urllib2.py'),
                      'AbstractBasicAuthHandler')]},
        loc('file:C:/Miniconda2/Lib/zipfile.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Miniconda2/Lib/zipfile.py'),
                      'BadZipfile')]},
        loc('file:C:/Miniconda2/lib/site-packages/Keras-2.0.4-py2.7.egg/keras/backend/common.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Miniconda2/lib/site-packages/Keras-2.0.4-py2.7.egg/keras/backend/common.py'),
                      'cast_to_floatx')]},
        loc('file:C:/Miniconda2/lib/site-packages/Keras-2.0.4-py2.7.egg/keras/datasets/reuters.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Miniconda2/lib/site-packages/Keras-2.0.4-py2.7.egg/keras/datasets/reuters.py'),
                      'get_word_index')]},
        loc('file:C:/Miniconda2/lib/site-packages/Keras-2.0.4-py2.7.egg/keras/layers/convolutional.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Miniconda2/lib/site-packages/Keras-2.0.4-py2.7.egg/keras/layers/convolutional.py'),
                      'AtrousConv1D')]},
        loc('file:C:/Miniconda2/lib/site-packages/Keras-2.0.4-py2.7.egg/keras/preprocessing/text.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Miniconda2/lib/site-packages/Keras-2.0.4-py2.7.egg/keras/preprocessing/text.py'),
                      'maketrans')]},
        loc('file:C:/Miniconda2/lib/site-packages/Keras-2.0.4-py2.7.egg/keras/utils/vis_utils.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Miniconda2/lib/site-packages/Keras-2.0.4-py2.7.egg/keras/utils/vis_utils.py'),
                      'model_to_dot')]},
        loc('file:C:/Miniconda2/lib/site-packages/Theano-0.10.0.dev1-py2.7.egg/theano/__init__.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Miniconda2/lib/site-packages/Theano-0.10.0.dev1-py2.7.egg/theano/compat/__init__.py'),
                      '')]},
        loc('file:C:/Miniconda2/lib/site-packages/Theano-0.10.0.dev1-py2.7.egg/theano/gpuarray/__init__.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Miniconda2/lib/site-packages/Theano-0.10.0.dev1-py2.7.egg/theano/gpuarray/basic_ops.py'),
                      '')]},
        loc('file:C:/Miniconda2/lib/site-packages/Theano-0.10.0.dev1-py2.7.egg/theano/version.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Miniconda2/lib/site-packages/Theano-0.10.0.dev1-py2.7.egg/theano/version.py'),
                      'full_version')]},
        loc('file:C:/Miniconda2/lib/site-packages/Theano-0.9.0-py2.7.egg/theano/gof/cmodule.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Miniconda2/lib/site-packages/Theano-0.9.0-py2.7.egg/theano/gof/cmodule.py'),
                      'Compiler')]},
        loc('file:C:/Miniconda2/lib/site-packages/keras/datasets/mnist.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Miniconda2/lib/site-packages/keras/datasets/mnist.py'),
                      'load_data')]},
        loc('file:C:/Miniconda2/lib/site-packages/matplotlib/axes/_subplots.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Miniconda2/lib/site-packages/matplotlib/axes/_subplots.py'),
                      'Subplot')]},
        loc('file:C:/Miniconda2/lib/site-packages/numpy/core/_methods.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('file:C:/Miniconda2/lib/site-packages/numpy/core/_methods.py'),
                             '_var')]],
        'top-node': [('generic attribute',
                      loc('file:C:/Miniconda2/lib/site-packages/numpy/core/_methods.py'),
                      'umr_all')]},
        loc('file:C:/Miniconda2/lib/site-packages/numpy/core/fromnumeric.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('file:C:/Miniconda2/lib/site-packages/numpy/core/fromnumeric.py'),
                             '__all__')]],
        'top-node': [('function def',
                      loc('file:C:/Miniconda2/lib/site-packages/numpy/core/fromnumeric.py'),
                      'alen')]},
        loc('file:C:/Miniconda2/lib/site-packages/numpy/lib/npyio.py'): {'ex'\
        'panded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Miniconda2/lib/site-packages/numpy/lib/npyio.py'),
                      'BagObj')]},
        loc('file:C:/Miniconda2/lib/site-packages/pygccxml/parser/__init__.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Miniconda2/lib/site-packages/pygccxml/parser/config.py'),
                      '')]},
        loc('file:C:/Miniconda2/lib/site-packages/pygccxml/parser/config.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Miniconda2/lib/site-packages/pygccxml/parser/config.py'),
                      'create_compiler_path')]},
        loc('file:C:/Miniconda2/lib/site-packages/pygccxml/parser/project_reader.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Miniconda2/lib/site-packages/pygccxml/parser/project_reader.py'),
                      'COMPILATION_MODE')]},
        loc('file:C:/Miniconda2/lib/site-packages/pygccxml/parser/source_reader.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Miniconda2/lib/site-packages/pygccxml/parser/source_reader.py'),
                      'bind_aliases')]},
        loc('file:C:/Miniconda2/lib/site-packages/pygccxml/utils/utils.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Miniconda2/lib/site-packages/pygccxml/utils/utils.py'),
                      'cached')]},
        loc('file:C:/Miniconda2/lib/site-packages/sklearn/cluster/k_means_.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Miniconda2/lib/site-packages/sklearn/cluster/k_means_.py'),
                      'KMeans')]},
        loc('file:C:/Miniconda2/lib/site-packages/sklearn/utils/validation.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Miniconda2/lib/site-packages/sklearn/utils/validation.py'),
                      'assert_all_finite')]},
        loc('file:C:/Miniconda2/lib/site-packages/theano/sandbox/cuda/nvcc_compiler.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Miniconda2/lib/site-packages/theano/sandbox/cuda/nvcc_compiler.py'),
                      'add_standard_rpath')]},
        loc('file:C:/Program Files (x86)/Wing IDE 6.0/LICENSE.txt'): {'expan'\
        'ded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('file:C:/Program Files (x86)/Wing IDE 6.0/resources/builtin-pi-files/2.7/__builtin__.pi'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Program Files (x86)/Wing IDE 6.0/resources/builtin-pi-files/2.7/__builtin__.pi'),
                      'abs')]},
        loc('file:C:/Program Files (x86)/Wing IDE 6.0/scripts/cv2/__init__.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('file:C:/Program Files (x86)/Wing IDE 6.0/scripts/editor-extensions.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Program Files (x86)/Wing IDE 6.0/scripts/editor-extensions.py'),
                      'batch_search_current_directory')]},
        loc('file:C:/Program Files (x86)/Wing IDE 6.0/scripts/imagewatch.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('file:C:/Program Files (x86)/Wing IDE 6.0/scripts/imagewatch.py'),
                             'imagewatch')]],
        'top-node': [('function def',
                      loc('file:C:/Program Files (x86)/Wing IDE 6.0/scripts/imagewatch.py'),
                      'imagewatch')]},
        loc('file:C:/Program Files (x86)/Wing IDE 6.0/scripts/testapi.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Program Files (x86)/Wing IDE 6.0/scripts/testapi.py'),
                      'app')]},
        loc('file:C:/Users/sui/AppData/Local/Temp/tmp_cxzc8.py'): {'expanded'\
        '-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Users/sui/AppData/Local/Temp/tmp_cxzc8.py'),
                      'app')]},
        loc('file:C:/Users/sui/AppData/Local/Temp/tmpudggvg.py'): {'expanded'\
        '-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Users/sui/AppData/Local/Temp/tmpudggvg.py'),
                      'app')]},
        loc('file:C:/Users/sui/AppData/Local/Wing IDE 6/pi-cache/2.7/C/Miniconda2/lib/cv2.pi'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('file:C:/Users/sui/AppData/Local/Wing IDE 6/pi-cache/2.7/C/Miniconda2/lib/cv2.pi'),
                             '__version__')]],
        'top-node': [('function def',
                      loc('file:C:/Users/sui/AppData/Local/Wing IDE 6/pi-cache/2.7/C/Miniconda2/lib/cv2.pi'),
                      'absdiff')]},
        loc('file:C:/Users/sui/AppData/Local/Wing IDE 6/pi-cache/2.7/C/Miniconda2/lib/site-packages/cv2.pi'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Users/sui/AppData/Local/Wing IDE 6/pi-cache/2.7/C/Miniconda2/lib/site-packages/cv2.pi'),
                      'absdiff')]},
        loc('file:C:/Users/sui/AppData/Local/Wing IDE 6/pi-cache/2.7/C/Miniconda2/lib/site-packages/cv2.pi.meta'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('file:C:/Users/sui/AppData/Local/Wing IDE 6/pi-cache/2.7/C/Miniconda2/lib/site-packages/win32/win32gui.pi'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Users/sui/AppData/Local/Wing IDE 6/pi-cache/2.7/C/Miniconda2/lib/site-packages/win32/win32gui.pi'),
                      'AbortPath')]},
        loc('file:C:/Users/sui/AppData/Roaming/Wing IDE 6/snippets/c/code.ctx/decl'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('file:C:/Users/sui/AppData/Roaming/Wing IDE 6/snippets/html/content.ctx/css-inline'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('file:C:/Users/sui/AppData/Roaming/Wing IDE 6/snippets/imagewatch'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('file:C:/Users/sui/Documents/Tencent Files/42297949/FileRecv/opencvsetup/calibrate.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Users/sui/Documents/Tencent Files/42297949/FileRecv/opencvsetup/calibrate.py'),
                      'args')]},
        loc('../../../../Download/python_bindings/test/chg.cpp'): {'expanded'\
        '-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../Download/python_bindings/test/chg.h'): {'expanded-n'\
        'odes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../Download/python_bindings/test/example.hpp'): {'expa'\
        'nded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../Download/python_bindings/test/test.py'): {'expanded'\
        '-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Download/python_bindings/test/test.py'),
                      'class_')]},
        loc('../../../../Download/python_bindings/test/test_pybindgen.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Download/python_bindings/test/test_pybindgen.py'),
                      'mod')]},
        loc('../../../../Download/python_bindings/test/test_pybindgen_chg.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Download/python_bindings/test/test_pybindgen_chg.py'),
                      'mb')]},
        loc('../../../../Download/python_bindings/test/test_pygccxml.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Download/python_bindings/test/test_pygccxml.py'),
                      'class_')]},
        loc('../../../../Download/python_bindings/test/unzip.py'): {'expande'\
        'd-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Download/python_bindings/test/unzip.py'),
                      'e')]},
        loc('../../../../Download/scapy/lms100.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../Download/scapy/lms100.py'),
                      'decS')]},
        loc('../../../../Download/scapy/lms1xx_5xx.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../Download/scapy/lms1xx_5xx.py'),
                      'decS')]},
        loc('../../../../Download/scapy/mmringbuffer-master/mmringbuffer/__init__.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Download/scapy/mmringbuffer-master/mmringbuffer/collections.py'),
                      '')]},
        loc('../../../../Download/scapy/mmringbuffer-master/mmringbuffer/collections.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../Download/scapy/mmringbuffer-master/mmringbuffer/collections.py'),
                      'MemMapRingBuffer')]},
        loc('../../../../Download/scapy/mmringbuffer-master/setup.py'): {'ex'\
        'panded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../Download/scapy/mmringbuffer-master/tests/__init__.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Download/scapy/mmringbuffer-master/tests/test_collections.py'),
                      '')]},
        loc('../../../../Download/scapy/mmringbuffer-master/tests/test_collections.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../Download/scapy/mmringbuffer-master/tests/test_collections.py'),
                      'main')]},
        loc('../../../../Download/scapy/mmringbuffer_temp.py'): {'expanded-n'\
        'odes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Download/scapy/mmringbuffer_temp.py'),
                      'file_path')]},
        loc('../../../../Download/scapy/ringbuffer-master/ringbuffer.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../Download/scapy/ringbuffer-master/ringbuffer.py'),
                      'AlreadyClosedError')]},
        loc('../../../../Download/scapy/ringbuffer-master/test_ringbuffer.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../Download/scapy/ringbuffer-master/test_ringbuffer.py'),
                      'AsyncProxy')]},
        loc('../../../../Download/scapy/scapy_test.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Download/scapy/scapy_test.py'),
                      'sourceIPs')]},
        loc('../../../../Download/scapy/test_scan_data.py'): {'expanded-node'\
        's': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Download/scapy/test_scan_data.py'),
                      'f')]},
        loc('../../../../Download/scapy/test_scan_package.py'): {'expanded-n'\
        'odes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Download/scapy/test_scan_package.py'),
                      'ap')]},
        loc('../../../../Projects/Beijing_weijian/jinghugaosu/pyinstaller/PyInstaller/utils/cliutils/grab_version.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../Projects/Beijing_weijian/jinghugaosu/pyinstaller/PyInstaller/utils/cliutils/grab_version.py'),
                      'run')]},
        loc('../../../../Projects/Beijing_weijian/jinghugaosu/pyinstaller/PyInstaller/utils/win32/versioninfo.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../Projects/Beijing_weijian/jinghugaosu/pyinstaller/PyInstaller/utils/win32/versioninfo.py'),
                      'decode')]},
        loc('../../../../Projects/CarRobot/boundingbox_detection/boundingbox_detection/cornerDetect.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../Projects/CarRobot/boundingbox_detection/boundingbox_detection/cornerDetect.py'),
                      'main')]},
        loc('../../../../Projects/beijing_weijian/delete_unused.py'): {'expa'\
        'nded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../Projects/beijing_weijian/delete_unused.py'),
                      'create_table')]},
        loc('../../../../Projects/beijing_weijian/generate_csv.py'): {'expan'\
        'ded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../Projects/beijing_weijian/generate_csv.py'),
                      'fullcsv_generate')]},
        loc('../../../../Projects/beijing_weijian/jinghugaosu/excel_test.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Projects/beijing_weijian/jinghugaosu/excel_test.py'),
                      'list_NAME')]},
        loc('../../../../Projects/beijing_weijian/jinghugaosu/import_shptxt.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../../../Projects/beijing_weijian/jinghugaosu/import_shptxt.py'),
                             '__main__')]],
        'top-node': [('function def',
                      loc('../../../../Projects/beijing_weijian/jinghugaosu/import_shptxt.py'),
                      'create_table')]},
        loc('../../../../Projects/beijing_weijian/jinghugaosu/jinghugaosu-gui.py'): {'e'\
        'xpanded-nodes': [[('class def',
                            loc('../../../../Projects/beijing_weijian/jinghugaosu/jinghugaosu-gui.py'),
                            'JinghugaosuApp')]],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Projects/beijing_weijian/jinghugaosu/jinghugaosu-gui.py'),
                      'app')]},
        loc('../../../../Projects/beijing_weijian/jinghugaosu/pyinstaller/hello.txt'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../Projects/beijing_weijian/jinghugaosu/pyinstaller/pyinstaller.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../Projects/beijing_weijian/jinghugaosu/xyzOffset.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../../../../Projects/beijing_weijian/jinghugaosu/xyzOffset.py'),
                             'TaskThread')]],
        'top-node': [('generic attribute',
                      loc('../../../../Projects/beijing_weijian/jinghugaosu/xyzOffset.py'),
                      'app')]},
        loc('../../../../Projects/beijing_weijian/jinghugaosu/xyzOffset.pyw'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../../../../Projects/beijing_weijian/jinghugaosu/xyzOffset.pyw'),
                             'xyzOffset')]],
        'top-node': [('generic attribute',
                      loc('../../../../Projects/beijing_weijian/jinghugaosu/xyzOffset.pyw'),
                      'app')]},
        loc('../../../../Projects/beijing_weijian/jinghugaosu/xyzOffset1.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../Projects/beijing_weijian/jinghugaosu/xyzOffset1.py'),
                      'Ui_dialog')]},
        loc('../../../../Projects/\xe4\xba\x92\xe6\x84\x9f\xe5\x99\xa8\xe6\xb5\x8b\xe9\x87\x8f/Data_txt2bin.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../Projects/\xe4\xba\x92\xe6\x84\x9f\xe5\x99\xa8\xe6\xb5\x8b\xe9\x87\x8f/Data_txt2bin.py'),
                      'main')]},
        loc('../../../../Projects/\xe4\xba\xba\xe8\x84\xb8\xe8\xaf\x86\xe5\x88\xab/VideoCapture-0.9-5/VideoCapture-0.9-5/Examples/VideoCapture.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Projects/\xe4\xba\xba\xe8\x84\xb8\xe8\xaf\x86\xe5\x88\xab/VideoCapture-0.9-5/VideoCapture-0.9-5/Examples/VideoCapture.py'),
                      'cam')]},
        loc('../../../../Projects/\xe4\xba\xba\xe8\x84\xb8\xe8\xaf\x86\xe5\x88\xab/VideoCapture-0.9-5/VideoCapture-0.9-5/Examples/displayPropertiesDev1.pyw'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Projects/\xe4\xba\xba\xe8\x84\xb8\xe8\xaf\x86\xe5\x88\xab/VideoCapture-0.9-5/VideoCapture-0.9-5/Examples/displayPropertiesDev1.pyw'),
                      'cam')]},
        loc('../../../../Projects/\xe4\xba\xba\xe8\x84\xb8\xe8\xaf\x86\xe5\x88\xab/VideoCapture-0.9-5/VideoCapture-0.9-5/Examples/exa1_snapshot.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Projects/\xe4\xba\xba\xe8\x84\xb8\xe8\xaf\x86\xe5\x88\xab/VideoCapture-0.9-5/VideoCapture-0.9-5/Examples/exa1_snapshot.py'),
                      'cam')]},
        loc('../../../../Projects/\xe4\xba\xba\xe8\x84\xb8\xe8\xaf\x86\xe5\x88\xab/VideoCapture-0.9-5/VideoCapture-0.9-5/Examples/exa2_show-possibilities.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Projects/\xe4\xba\xba\xe8\x84\xb8\xe8\xaf\x86\xe5\x88\xab/VideoCapture-0.9-5/VideoCapture-0.9-5/Examples/exa2_show-possibilities.py'),
                      'cam')]},
        loc('../../../../Projects/\xe4\xba\xba\xe8\x84\xb8\xe8\xaf\x86\xe5\x88\xab/VideoCapture-0.9-5/VideoCapture-0.9-5/Examples/exa3_observer.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Projects/\xe4\xba\xba\xe8\x84\xb8\xe8\xaf\x86\xe5\x88\xab/VideoCapture-0.9-5/VideoCapture-0.9-5/Examples/exa3_observer.py'),
                      'cam')]},
        loc('../../../../Projects/\xe4\xba\xba\xe8\x84\xb8\xe8\xaf\x86\xe5\x88\xab/VideoCapture-0.9-5/VideoCapture-0.9-5/Examples/fixhtml.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../Projects/\xe4\xba\xba\xe8\x84\xb8\xe8\xaf\x86\xe5\x88\xab/VideoCapture-0.9-5/VideoCapture-0.9-5/Examples/fixhtml.py'),
                      'fixhtmlfile')]},
        loc('../../../../Projects/\xe4\xba\xba\xe8\x84\xb8\xe8\xaf\x86\xe5\x88\xab/VideoCapture-0.9-5/VideoCapture-0.9-5/Examples/mkdist.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Projects/\xe4\xba\xba\xe8\x84\xb8\xe8\xaf\x86\xe5\x88\xab/VideoCapture-0.9-5/VideoCapture-0.9-5/Examples/mkdist.py'),
                      'archive')]},
        loc('../../../../Projects/\xe4\xba\xba\xe8\x84\xb8\xe8\xaf\x86\xe5\x88\xab/VideoCapture-0.9-5/VideoCapture-0.9-5/src/vidcapmodule.cpp'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../Projects/\xe4\xba\xba\xe8\x84\xb8\xe8\xaf\x86\xe5\x88\xab/camera.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Projects/\xe4\xba\xba\xe8\x84\xb8\xe8\xaf\x86\xe5\x88\xab/camera.py'),
                      'c')]},
        loc('../../../../Projects/\xe4\xba\xba\xe8\x84\xb8\xe8\xaf\x86\xe5\x88\xab/faceDetect/camera.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../Projects/\xe4\xba\xba\xe8\x84\xb8\xe8\xaf\x86\xe5\x88\xab/faceDetect/common.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../Projects/\xe4\xba\xba\xe8\x84\xb8\xe8\xaf\x86\xe5\x88\xab/faceDetect/common.py'),
                      'anorm2')]},
        loc('../../../../Projects/\xe4\xba\xba\xe8\x84\xb8\xe8\xaf\x86\xe5\x88\xab/faceDetect/facedetect.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Projects/\xe4\xba\xba\xe8\x84\xb8\xe8\xaf\x86\xe5\x88\xab/faceDetect/facedetect.py'),
                      'args')]},
        loc('../../../../Projects/\xe4\xba\xba\xe8\x84\xb8\xe8\xaf\x86\xe5\x88\xab/faceDetect/peopledetect.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../Projects/\xe4\xba\xba\xe8\x84\xb8\xe8\xaf\x86\xe5\x88\xab/faceDetect/video.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../Projects/\xe4\xba\xba\xe8\x84\xb8\xe8\xaf\x86\xe5\x88\xab/facebodyDetect/facedetect.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Projects/\xe4\xba\xba\xe8\x84\xb8\xe8\xaf\x86\xe5\x88\xab/facebodyDetect/facedetect.py'),
                      'args')]},
        loc('../../../../Projects/\xe4\xba\xba\xe8\x84\xb8\xe8\xaf\x86\xe5\x88\xab/facebodyDetect/imutils.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../Projects/\xe4\xba\xba\xe8\x84\xb8\xe8\xaf\x86\xe5\x88\xab/facebodyDetect/motion_detector.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Projects/\xe4\xba\xba\xe8\x84\xb8\xe8\xaf\x86\xe5\x88\xab/facebodyDetect/motion_detector.py'),
                      'ap')]},
        loc('../../../../Projects/\xe4\xba\xba\xe8\x84\xb8\xe8\xaf\x86\xe5\x88\xab/facebodyDetect/peopledetect.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Projects/\xe4\xba\xba\xe8\x84\xb8\xe8\xaf\x86\xe5\x88\xab/facebodyDetect/peopledetect.py'),
                      'args')]},
        loc('../../../../Projects/\xe4\xba\xba\xe8\x84\xb8\xe8\xaf\x86\xe5\x88\xab/facebodyDetect/video.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Projects/\xe4\xba\xba\xe8\x84\xb8\xe8\xaf\x86\xe5\x88\xab/facebodyDetect/video.py'),
                      'args')]},
        loc('../../../../Projects/\xe4\xba\xba\xe8\x84\xb8\xe8\xaf\x86\xe5\x88\xab/people_detect.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Projects/\xe4\xba\xba\xe8\x84\xb8\xe8\xaf\x86\xe5\x88\xab/people_detect.py'),
                      'cap')]},
        loc('../../../../Projects/\xe4\xba\xba\xe8\x84\xb8\xe8\xaf\x86\xe5\x88\xab/videocapture_windows.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Projects/\xe4\xba\xba\xe8\x84\xb8\xe8\xaf\x86\xe5\x88\xab/videocapture_windows.py'),
                      'cap')]},
        loc('../../../../Projects/\xe5\x81\x9c\xe8\xbd\xa6\xe5\x9c\xba\xe5\x90\x8a\xe8\xa3\x85/contour.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../../Projects/\xe5\x81\x9c\xe8\xbd\xa6\xe5\x9c\xba\xe5\x90\x8a\xe8\xa3\x85/contour.py'),
                             'thresh')]],
        'top-node': [('generic attribute',
                      loc('../../../../Projects/\xe5\x81\x9c\xe8\xbd\xa6\xe5\x9c\xba\xe5\x90\x8a\xe8\xa3\x85/contour.py'),
                      'approx')]},
        loc('../../../../Src.Disk/2.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Src.Disk/2.py'),
                      'bins')]},
        loc('../../../../Src.Disk/opensource/automatic-watermark-detection/closed-form-matting/closed_form_matting.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Src.Disk/opensource/automatic-watermark-detection/closed-form-matting/closed_form_matting.py'),
                      'closed_form_matting')]},
        loc('../../../../Src.Disk/opensource/automatic-watermark-detection/main.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Src.Disk/opensource/automatic-watermark-detection/main.py'),
                      'alph')]},
        loc('../../../../Src.Disk/opensource/automatic-watermark-detection/src/estimate_watermark.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../Src.Disk/opensource/automatic-watermark-detection/src/estimate_watermark.py'),
                      'crop_watermark')]},
        loc('../../../../Src.Disk/opensource/caffe/scripts/download_model_binary.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Src.Disk/opensource/caffe/scripts/download_model_binary.py'),
                      'args')]},
        loc('../../../../Src.Disk/opensource/caffe/scripts/download_prebuilt_dependencies.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Src.Disk/opensource/caffe/scripts/download_prebuilt_dependencies.py'),
                      'args')]},
        loc('../../../../Src.Disk/opensource/opencv_build/opencv/samples/python/demo.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../Src.Disk/opensource/opencv_build/opencv/samples/python/demo.py'),
                      'App')]},
        loc('../../../../Src.Disk/opensource/opencv_build/opencv/samples/python/dft.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Src.Disk/opensource/opencv_build/opencv/samples/python/dft.py'),
                      'dft_A')]},
        loc('../../../../Src.Disk/opensource/opencv_build/opencv/samples/python/mser.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Src.Disk/opensource/opencv_build/opencv/samples/python/mser.py'),
                      'cam')]},
        loc('../../../../Src.Disk/opensource/opencv_build/opencv/samples/python2/facedetect.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Src.Disk/opensource/opencv_build/opencv/samples/python2/facedetect.py'),
                      'args')]},
        loc('../../../../Src.Disk/opensource/opencv_build/opencv/samples/python2/facerec_demo.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Src.Disk/opensource/opencv_build/opencv/samples/python2/facerec_demo.py'),
                      'eigenvectors')]},
        loc('../../../../Src.Disk/opensource/opencv_build/opencv_contrib/modules/text/samples/mser_test.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../Src.Disk/opensource/opencv_build/opencv_contrib/modules/text/samples/mser_test.py'),
                      'main')]},
        loc('../../../../Src.Disk/opensource/opencv_build/opencv_contrib/modules/text/samples/textdetection.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Src.Disk/opensource/opencv_build/opencv_contrib/modules/text/samples/textdetection.py'),
                      'c')]},
        loc('../../../../Src.Disk/python_opencv/2.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Src.Disk/python_opencv/2.py'),
                      'bins')]},
        loc('../../../../Src.Disk/python_opencv/3.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Src.Disk/python_opencv/3.py'),
                      'ch')]},
        loc('../../../../Src.Disk/python_opencv/4.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Src.Disk/python_opencv/4.py'),
                      'args')]},
        loc('../../../../Src.Disk/python_opencv/8.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Src.Disk/python_opencv/8.py'),
                      'args')]},
        loc('../../../../Test/FaceTools-master/aligment.py'): {'expanded-nod'\
        'es': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../Test/FaceTools-master/aligment.py'),
                      'alignment')]},
        loc('../../../../Test/FaceTools-master/main.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Test/FaceTools-master/main.py'),
                      'ImagePath')]},
        loc('../../../../Test/FaceTools-master/textutil.py'): {'expanded-nod'\
        'es': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../Test/FaceTools-master/textutil.py'),
                      'cleanbox')]},
        loc('../../../../Test/compare_ann.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Test/compare_ann.py'),
                      'accuracies_annoy')]},
        loc('../../../../Test/facedetect_opencv/facedetect.py'): {'expanded-'\
        'nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../Test/facedetect_opencv/facedetect.py'),
                      'check_profiles')]},
        loc('../../../../Test/vgg_face_dataset/delete_nojpeg.py'): {'expande'\
        'd-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Test/vgg_face_dataset/delete_nojpeg.py'),
                      'FILE_LOCK')]},
        loc('../../../../soft.bakup/shadowsocks/parser/Arukas.py'): {'expand'\
        'ed-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../../../../soft.bakup/shadowsocks/parser/Arukas.py'),
                             'ArukaUpdate')]],
        'top-node': [('class def',
                      loc('../../../../soft.bakup/shadowsocks/parser/Arukas.py'),
                      'ArukaUpdate')]},
        loc('../../../../soft.bakup/shadowsocks/parser/Arukas_parse.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../../soft.bakup/shadowsocks/parser/Arukas_parse.py'),
                             'p')]],
        'top-node': [('generic attribute',
                      loc('../../../../soft.bakup/shadowsocks/parser/Arukas_parse.py'),
                      'p')]},
        loc('../../../../soft.bakup/shadowsocks/parser/autoss.py'): {'expand'\
        'ed-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../../../soft.bakup/shadowsocks/parser/autoss.py'),
                             'load_Sslist')]],
        'top-node': [('generic attribute',
                      loc('../../../../soft.bakup/shadowsocks/parser/autoss.py'),
                      'configs')]},
        loc('../../../../soft.bakup/shadowsocks/parser/doub.bid.py'): {'expa'\
        'nded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../../../soft.bakup/shadowsocks/parser/doub.bid.py'),
                             'doubio')]],
        'top-node': [('function def',
                      loc('../../../../soft.bakup/shadowsocks/parser/doub.bid.py'),
                      'club91vps')]},
        loc('../../../../soft.bakup/shadowsocks/parser/doubi.cx.py'): {'expa'\
        'nded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../../soft.bakup/shadowsocks/parser/doubi.cx.py'),
                             'headers')]],
        'top-node': [('generic attribute',
                      loc('../../../../soft.bakup/shadowsocks/parser/doubi.cx.py'),
                      'headers')]},
        loc('../../../../soft.bakup/shadowsocks/parser/free-ss.site.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../soft.bakup/shadowsocks/parser/free-ss.site.py'),
                      'free_ss')]},
        loc('../../../../soft.bakup/shadowsocks/parser/get_freess.py'): {'ex'\
        'panded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../soft.bakup/shadowsocks/parser/get_freess.py'),
                      'main')]},
        loc('../../../../soft.bakup/shadowsocks/parser/guaguass.lol.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../../soft.bakup/shadowsocks/parser/guaguass.lol.py'),
                             'headers')]],
        'top-node': [('generic attribute',
                      loc('../../../../soft.bakup/shadowsocks/parser/guaguass.lol.py'),
                      'headers')]},
        loc('../../../../soft.bakup/shadowsocks/parser/guaguass_lol.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../soft.bakup/shadowsocks/parser/guaguass_lol.py'),
                      'get_guaguass_lol')]},
        loc('../../../../soft.bakup/shadowsocks/parser/guapi.ml.py'): {'expa'\
        'nded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../../soft.bakup/shadowsocks/parser/guapi.ml.py'),
                             'user_agent')]],
        'top-node': [('generic attribute',
                      loc('../../../../soft.bakup/shadowsocks/parser/guapi.ml.py'),
                      'cell')]},
        loc('../../../../soft.bakup/shadowsocks/parser/imread_test.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../../soft.bakup/shadowsocks/parser/imread_test.py'),
                             'bi_str')]],
        'top-node': [('generic attribute',
                      loc('../../../../soft.bakup/shadowsocks/parser/imread_test.py'),
                      'bi_str')]},
        loc('../../../../soft.bakup/shadowsocks/parser/lsjss.xyz.py'): {'exp'\
        'anded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../soft.bakup/shadowsocks/parser/lsjss.xyz.py'),
                      'lsjssxyz')]},
        loc('../../../../soft.bakup/shadowsocks/parser/lsjss_xyz.py'): {'exp'\
        'anded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../soft.bakup/shadowsocks/parser/lsjss_xyz.py'),
                      'get_lsjss_xyz')]},
        loc('../../../../soft.bakup/shadowsocks/parser/nogicat.net.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../soft.bakup/shadowsocks/parser/nogicat.net.py'),
                      'bi_str')]},
        loc('../../../../soft.bakup/shadowsocks/parser/nogicat_net.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../soft.bakup/shadowsocks/parser/nogicat_net.py'),
                      'get_nogicat_net')]},
        loc('../../../../soft.bakup/shadowsocks/parser/ruisu_ml.py'): {'expa'\
        'nded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../soft.bakup/shadowsocks/parser/ruisu_ml.py'),
                      'argv0_list')]},
        loc('../../../../soft.bakup/shadowsocks/parser/shadowsocksr.ru.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../soft.bakup/shadowsocks/parser/shadowsocksr.ru.py'),
                      'bi_str')]},
        loc('../../../../soft.bakup/shadowsocks/parser/shadowsocksr_ru.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../soft.bakup/shadowsocks/parser/shadowsocksr_ru.py'),
                      'get_shadowsocksr_ru')]},
        loc('../../../../soft.bakup/shadowsocks/parser/ss_url.py'): {'expand'\
        'ed-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../../../soft.bakup/shadowsocks/parser/ss_url.py'),
                             'decode_zbar')]],
        'top-node': [('function def',
                      loc('../../../../soft.bakup/shadowsocks/parser/ss_url.py'),
                      'decode_url_zbar')]},
        loc('../../../../soft.bakup/shadowsocks/parser/ssglobal.co.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../soft.bakup/shadowsocks/parser/ssglobal_co.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../soft.bakup/shadowsocks/parser/ssglobal_co.py'),
                      'get_ssglobal_co')]},
        loc('../../../../soft.bakup/shadowsocks/parser/yhyhd_org.py'): {'exp'\
        'anded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../soft.bakup/shadowsocks/parser/yhyhd_org.py'),
                      'get_yhyhd_org')]},
        loc('../../../../temp/Keras/Theano/theano/__init__.py'): {'expanded-'\
        'nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/Keras/Theano/theano/compat/__init__.py'),
                      '')]},
        loc('../../../../temp/Keras/Theano/theano/gpuarray/tests/test_dnn.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/Keras/Theano/theano/gpuarray/tests/test_dnn.py'),
                      'dnn_pool_modes')]},
        loc('../../../../temp/Keras/keras/examples/cifar10_cnn.py'): {'expan'\
        'ded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../../temp/Keras/keras/examples/cifar10_cnn.py'),
                             'x_train')]],
        'top-node': [('generic attribute',
                      loc('../../../../temp/Keras/keras/examples/cifar10_cnn.py'),
                      'batch_size')]},
        loc('../../../../temp/Keras/keras/examples/mnist_cnn.py'): {'expande'\
        'd-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/Keras/keras/examples/mnist_cnn.py'),
                      'batch_size')]},
        loc('../../../../temp/Keras/keras/examples/mnist_mlp.py'): {'expande'\
        'd-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/Keras/keras/examples/mnist_mlp.py'),
                      'batch_size')]},
        loc('../../../../temp/Keras/keras/examples/mnist_siamese_graph.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/Keras/keras/examples/mnist_siamese_graph.py'),
                      'base_network')]},
        loc('../../../../temp/Keras/keras/examples/reuters_mlp.py'): {'expan'\
        'ded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../../temp/Keras/keras/examples/reuters_mlp.py'),
                             'y_train')]],
        'top-node': [('generic attribute',
                      loc('../../../../temp/Keras/keras/examples/reuters_mlp.py'),
                      'batch_size')]},
        loc('../../../../temp/Keras/keras/keras/__init__.py'): {'expanded-no'\
        'des': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Miniconda2/lib/site-packages/keras/initializations.py'),
                      '')]},
        loc('../../../../temp/Keras/keras/keras/datasets/mnist.py'): {'expan'\
        'ded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../temp/Keras/keras/keras/datasets/mnist.py'),
                      'load_data')]},
        loc('../../../../temp/Keras/keras/keras/utils/data_utils.py'): {'exp'\
        'anded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../temp/Keras/keras/keras/utils/data_utils.py'),
                      'get_file')]},
        loc('../../../../temp/Keras/libgpuarray/bld/src/CMakeFiles/gpuarray-static.dir/C.includecache'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../temp/Keras/libgpuarray/bld/src/CMakeFiles/gpuarray-static.dir/depend.internal'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../temp/Keras/libgpuarray/bld/src/CMakeFiles/gpuarray.dir/C.includecache'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../temp/Keras/libgpuarray/bld/src/cmake_install.cmake'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../temp/Keras/libgpuarray/build/lib.win-amd64-2.7/pygpu/blas.c'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../temp/Keras/libgpuarray/build/lib.win-amd64-2.7/pygpu/gpuarray.c'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../temp/Keras/libgpuarray/doc/pyapi/pygpu.rst'): {'exp'\
        'anded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../temp/Keras/libgpuarray/pygpu.egg-info/SOURCES.txt'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../temp/Keras/libgpuarray/pygpu/_array.py'): {'expande'\
        'd-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../temp/Keras/libgpuarray/pygpu/_array.py'),
                      'ndgpuarray')]},
        loc('../../../../temp/Keras/libgpuarray/pygpu/blas.c'): {'expanded-n'\
        'odes': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('../../../../temp/Keras/libgpuarray/pygpu/blas.pyx'): {'expanded'\
        '-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../temp/Keras/libgpuarray/pygpu/dtypes.py'): {'expande'\
        'd-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../temp/Keras/libgpuarray/pygpu/dtypes.py'),
                      'dtype_to_ctype')]},
        loc('../../../../temp/Keras/libgpuarray/pygpu/gpuarray.c'): {'expand'\
        'ed-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../temp/Keras/libgpuarray/pygpu/gpuarray.pxd'): {'expa'\
        'nded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../temp/Keras/libgpuarray/pygpu/gpuarray.pyx'): {'expa'\
        'nded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../temp/Keras/libgpuarray/pygpu/tests/__init__.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/Keras/libgpuarray/pygpu/tests/main.py'),
                      '')]},
        loc('../../../../temp/Keras/libgpuarray/pygpu/tests/main.py'): {'exp'\
        'anded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../temp/Keras/libgpuarray/pygpu/tests/main.py'),
                      'main')]},
        loc('../../../../temp/Keras/libgpuarray/pygpu/tests/support.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../temp/Keras/libgpuarray/pygpu/tests/support.py'),
                      'check_all')]},
        loc('../../../../temp/Keras/libgpuarray/pygpu/tests/test_basic.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../temp/Keras/libgpuarray/pygpu/tests/test_basic.py'),
                      'test_errors')]},
        loc('../../../../temp/Keras/libgpuarray/pygpu/tests/test_blas.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../temp/Keras/libgpuarray/pygpu/tests/test_blas.py'),
                      'dot')]},
        loc('../../../../temp/Keras/libgpuarray/pygpu/version.py'): {'expand'\
        'ed-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../../temp/Keras/libgpuarray/pygpu/version.py'),
                             'fullversion')]],
        'top-node': [('generic attribute',
                      loc('../../../../temp/Keras/libgpuarray/pygpu/version.py'),
                      'fullversion')]},
        loc('../../../../temp/Keras/libgpuarray/setup.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/Keras/libgpuarray/setup.py'),
                      'a')]},
        loc('../../../../temp/Keras/libgpuarray/src/gpuarray/buffer.h'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../temp/Keras/libgpuarray/src/gpuarray_array_blas.c'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../temp/Keras/libgpuarray/src/gpuarray_buffer.c'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../temp/Keras/libgpuarray/src/gpuarray_buffer_blas.c'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../temp/Keras/libgpuarray/src/gpuarray_buffer_cuda.c'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../temp/Keras/libgpuarray/src/gpuarray_buffer_opencl.c'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../temp/Keras/libgpuarray/src/loaders/libcublas.c'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../temp/Keras/libgpuarray/src/loaders/libcublas.h'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../temp/Keras/libgpuarray/src/private.h'): {'expanded-'\
        'nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../temp/Keras/retina-unet/configuration.txt'): {'expan'\
        'ded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../temp/Keras/retina-unet/lib/extract_patches.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../../../temp/Keras/retina-unet/lib/extract_patches.py'),
                             'data_consistency_check')]],
        'top-node': [('function def',
                      loc('../../../../temp/Keras/retina-unet/lib/extract_patches.py'),
                      'data_consistency_check')]},
        loc('../../../../temp/Keras/retina-unet/lib/help_functions.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../temp/Keras/retina-unet/lib/help_functions.py'),
                      'group_images')]},
        loc('../../../../temp/Keras/retina-unet/lib/pre_processing.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../../../temp/Keras/retina-unet/lib/pre_processing.py'),
                             'adjust_gamma')]],
        'top-node': [('function def',
                      loc('../../../../temp/Keras/retina-unet/lib/pre_processing.py'),
                      'adjust_gamma')]},
        loc('../../../../temp/Keras/retina-unet/run_training.py'): {'expande'\
        'd-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/Keras/retina-unet/run_training.py'),
                      'config')]},
        loc('../../../../temp/Keras/retina-unet/src/retinaNN_training.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../../temp/Keras/retina-unet/src/retinaNN_training.py'),
                             'batch_size')]],
        'top-node': [('generic attribute',
                      loc('../../../../temp/Keras/retina-unet/src/retinaNN_training.py'),
                      'batch_size')]},
        loc('../../../../temp/Keras/test_keras.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/Keras/test_keras.py'),
                      'data')]},
        loc('../../../../temp/Keras/test_pygpu.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../temp/Keras/test_theano.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../../temp/Keras/test_theano.py'),
                             'f')]],
        'top-node': [('generic attribute',
                      loc('../../../../temp/Keras/test_theano.py'),
                      'f')]},
        loc('../../../../temp/Keras/ultrasound-nerve-segmentation-EdwardTyantov/ultrasound-nerve-segmentation-master/train.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../temp/Keras/ultrasound-nerve-segmentation-EdwardTyantov/ultrasound-nerve-segmentation-master/train.py'),
                      'Learner')]},
        loc('../../../../temp/Keras/unet-master/detect-cell-edge-use-unet-master/augdata.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../temp/Keras/unet-master/detect-cell-edge-use-unet-master/augdata.py'),
                      'dataProcess')]},
        loc('../../../../temp/Keras/unet-master/detect-cell-edge-use-unet-master/data.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../../temp/Keras/unet-master/detect-cell-edge-use-unet-master/data.py'),
                             'mydata')]],
        'top-node': [('class def',
                      loc('../../../../temp/Keras/unet-master/detect-cell-edge-use-unet-master/data.py'),
                      'dataProcess')]},
        loc('../../../../temp/Keras/unet-master/detect-cell-edge-use-unet-master/unet_test.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../temp/Keras/unet-master/detect-cell-edge-use-unet-master/unet_test.py'),
                      'myUnet')]},
        loc('../../../../temp/Keras/unet-master/unet-master/data.py'): {'exp'\
        'anded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../../../../temp/Keras/unet-master/unet-master/data.py'),
                             'dataProcess')]],
        'top-node': [('class def',
                      loc('../../../../temp/Keras/unet-master/unet-master/data.py'),
                      'dataProcess')]},
        loc('../../../../temp/Keras/unet-master/unet-master/split_merge_tif.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/Keras/unet-master/unet-master/split_merge_tif.py'),
                      'dirtype')]},
        loc('../../../../temp/Keras/unet-master/unet-master/unet.py'): {'exp'\
        'anded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../temp/Keras/unet-master/unet-master/unet.py'),
                      'myUnet')]},
        loc('../../../../temp/cal.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/cal.py'),
                      'GetWindowText')]},
        loc('../../../../temp/circle.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../../../temp/circle.py'),
                             'bwmorph')]],
        'top-node': [('function def',
                      loc('../../../../temp/circle.py'),
                      'bwmorph')]},
        loc('../../../../temp/gradient direction/gradient_direction.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../../temp/gradient direction/gradient_direction.py'),
                             'angle')]],
        'top-node': [('generic attribute',
                      loc('../../../../temp/gradient direction/gradient_direction.py'),
                      'angle')]},
        loc('../../../../temp/gradient direction/mser_test.py'): {'expanded-'\
        'nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../temp/gradient direction/mser_test.py'),
                      'main')]},
        loc('../../../../temp/gradient direction/recursive_walk.py'): {'expa'\
        'nded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../temp/gradient direction/recursive_walk.py'),
                      'recursive_walk')]},
        loc('../../../../temp/gradient direction/splitLR.py'): {'expanded-no'\
        'des': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../temp/gradient direction/splitLR.py'),
                      'main')]},
        loc('../../../../temp/gradient direction/swt.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../temp/gradient direction/textdetection.py'): {'expan'\
        'ded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../temp/gradient direction/utils.py'): {'expanded-node'\
        's': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../temp/gradient_direction/mser_ocr.py'): {'expanded-n'\
        'odes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../temp/gradient_direction/mser_ocr.py'),
                      'main')]},
        loc('../../../../temp/gradient_direction/mser_test.py'): {'expanded-'\
        'nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../temp/gradient_direction/mser_test.py'),
                      'main')]},
        loc('../../../../temp/gradient_direction/pyqtgrapg_directionRIO.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../temp/gradient_direction/pyqtgrapg_directionRIO.py'),
                      'DirectionRIO')]},
        loc('../../../../temp/gradient_direction/pyqtgraph_image_QLineBox.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/gradient_direction/pyqtgraph_image_QLineBox.py'),
                      'app')]},
        loc('../../../../temp/gradient_direction/pyqtgraph_image_QLineBox.ui.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/gradient_direction/pyqtgraph_image_QLineBox.ui.py'),
                      'app')]},
        loc('../../../../temp/gradient_direction/recursive_walk.py'): {'expa'\
        'nded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../temp/gradient_direction/recursive_walk.py'),
                      'curpath_walk')]},
        loc('../../../../temp/gradient_direction/splitLR.py'): {'expanded-no'\
        'des': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../temp/gradient_direction/splitLR.py'),
                      'main')]},
        loc('../../../../temp/gradient_direction/swt.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/gradient_direction/swt.py'),
                      'chunk')]},
        loc('../../../../temp/gradient_direction/textdetection.py'): {'expan'\
        'ded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/gradient_direction/textdetection.py'),
                      'c')]},
        loc('../../../../temp/kmeans/EpipolarGeometry.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/kmeans/EpipolarGeometry.py'),
                      'des1')]},
        loc('../../../../temp/kmeans/OpenCV-Python-Tutorial-master/ch32-\xe4\xbb\x8b\xe7\xbb\x8dSIFT/sift.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/kmeans/OpenCV-Python-Tutorial-master/ch32-\xe4\xbb\x8b\xe7\xbb\x8dSIFT/sift.py'),
                      'des')]},
        loc('../../../../temp/kmeans/OpenCV-Python-Tutorial-master/ch37-\xe7\x89\xb9\xe5\xbe\x81\xe5\x8c\xb9\xe9\x85\x8d/37.4-SIFT_match.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/kmeans/OpenCV-Python-Tutorial-master/ch37-\xe7\x89\xb9\xe5\xbe\x81\xe5\x8c\xb9\xe9\x85\x8d/37.4-SIFT_match.py'),
                      'bf')]},
        loc('../../../../temp/kmeans/OpenCV-Python-Tutorial-master/ch37-\xe7\x89\xb9\xe5\xbe\x81\xe5\x8c\xb9\xe9\x85\x8d/37.5-FLANN\xe5\x8c\xb9\xe9\x85\x8d\xe5\x99\xa8.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/kmeans/OpenCV-Python-Tutorial-master/ch37-\xe7\x89\xb9\xe5\xbe\x81\xe5\x8c\xb9\xe9\x85\x8d/37.5-FLANN\xe5\x8c\xb9\xe9\x85\x8d\xe5\x99\xa8.py'),
                      'des1')]},
        loc('../../../../temp/kmeans/OpenCV-Python-Tutorial-master/ch38-\xe4\xbd\xbf\xe7\x94\xa8\xe7\x89\xb9\xe5\xbe\x81\xe5\x8c\xb9\xe9\x85\x8d\xe5\x92\x8c\xe5\x8d\x95\xe5\xba\x94\xe6\x80\xa7\xe6\x9f\xa5\xe6\x89\xbe\xe5\xaf\xb9\xe8\xb1\xa1/findHomography.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/kmeans/OpenCV-Python-Tutorial-master/ch38-\xe4\xbd\xbf\xe7\x94\xa8\xe7\x89\xb9\xe5\xbe\x81\xe5\x8c\xb9\xe9\x85\x8d\xe5\x92\x8c\xe5\x8d\x95\xe5\xba\x94\xe6\x80\xa7\xe6\x9f\xa5\xe6\x89\xbe\xe5\xaf\xb9\xe8\xb1\xa1/findHomography.py'),
                      'des1')]},
        loc('../../../../temp/kmeans/OpenCV-Python-Tutorial-master/ch44-\xe5\xaf\xb9\xe6\x9e\x81\xe5\x87\xa0\xe4\xbd\x95/code.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/kmeans/OpenCV-Python-Tutorial-master/ch44-\xe5\xaf\xb9\xe6\x9e\x81\xe5\x87\xa0\xe4\xbd\x95/code.py'),
                      'des1')]},
        loc('../../../../temp/kmeans/OpenCV-Python-Tutorial-master/\xe5\xae\x98\xe6\x96\xb9samples/find_obj.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/kmeans/OpenCV-Python-Tutorial-master/\xe5\xae\x98\xe6\x96\xb9samples/find_obj.py'),
                      'args')]},
        loc('../../../../temp/kmeans/Registration.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../temp/kmeans/Registration.py'),
                      'alignImages')]},
        loc('../../../../temp/kmeans/asift.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../temp/kmeans/asift.py'),
                      'affine_detect')]},
        loc('../../../../temp/kmeans/asift_stitcher/asift_pano_stitcher.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/kmeans/asift_stitcher/asift_pano_stitcher.py'),
                      'args')]},
        loc('../../../../temp/kmeans/asift_stitcher/find_obj.py'): {'expande'\
        'd-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/kmeans/asift_stitcher/find_obj.py'),
                      'args')]},
        loc('../../../../temp/kmeans/find_obj.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/kmeans/find_obj.py'),
                      'args')]},
        loc('../../../../temp/kmeans/flann_test.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/kmeans/flann_test.py'),
                      'dataset')]},
        loc('../../../../temp/kmeans/harris_test.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/kmeans/harris_test.py'),
                      'corners')]},
        loc('../../../../temp/kmeans/hog_test.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/kmeans/hog_test.py'),
                      'gray_image')]},
        loc('../../../../temp/kmeans/imgcompare-master/match.py'): {'expande'\
        'd-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/kmeans/imgcompare-master/match.py'),
                      'args')]},
        loc('../../../../temp/kmeans/kmeans.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/kmeans/kmeans.py'),
                      'center')]},
        loc('../../../../temp/kmeans/line_match.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/kmeans/line_match.py'),
                      'detector')]},
        loc('../../../../temp/kmeans/mser_test.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/kmeans/mser_test.py'),
                      'c')]},
        loc('../../../../temp/kmeans/mser_test2.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/kmeans/mser_test2.py'),
                      'contour')]},
        loc('../../../../temp/kmeans/noteshrink/correct_skew.py'): {'expande'\
        'd-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/kmeans/noteshrink/correct_skew.py'),
                      'angle')]},
        loc('../../../../temp/kmeans/noteshrink/noteshrink.py'): {'expanded-'\
        'nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../temp/kmeans/noteshrink/noteshrink.py'),
                      'apply_palette')]},
        loc('../../../../temp/kmeans/noteshrink/page_dewrap.py'): {'expanded'\
        '-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/kmeans/noteshrink/page_dewrap.py'),
                      'ADAPTIVE_WINSZ')]},
        loc('../../../../temp/kmeans/noteshrink/rotation_spacing.py'): {'exp'\
        'anded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../temp/kmeans/noteshrink/rotation_spacing.py'),
                      'argmax')]},
        loc('../../../../temp/kmeans/retinex.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../temp/kmeans/retinex.py'),
                      'automatedMSRCR')]},
        loc('../../../../temp/kmeans/shape_1.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/kmeans/shape_1.py'),
                      'ld')]},
        loc('../../../../temp/kmeans/sift.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/kmeans/sift.py'),
                      'args')]},
        loc('../../../../temp/kmeans/sift_test.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/kmeans/sift_test.py'),
                      'ax1')]},
        loc('../../../../temp/kmeans/stitcher.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/kmeans/stitcher.py'),
                      'a')]},
        loc('../../../../temp/kmeans/surf_compare.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/kmeans/surf_compare.py'),
                      'center')]},
        loc('../../../../temp/kmeans/surf_transform.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/kmeans/surf_transform.py'),
                      'des1')]},
        loc('../../../../temp/kmeans/temp_img/opencvsetup/ChessboardDetect/FindChessboards.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../../../temp/kmeans/temp_img/opencvsetup/ChessboardDetect/FindChessboards.py'),
                             'findChessboard')]],
        'top-node': [('function def',
                      loc('../../../../temp/kmeans/temp_img/opencvsetup/ChessboardDetect/FindChessboards.py'),
                      'a3')]},
        loc('../../../../temp/kmeans/temp_img/opencvsetup/ChessboardDetect/chessboard_detect2.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/kmeans/temp_img/opencvsetup/ChessboardDetect/chessboard_detect2.py'),
                      'filenames')]},
        loc('../../../../temp/kmeans/temp_img/opencvsetup/ChessboardDetect/contour_detect.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../temp/kmeans/temp_img/opencvsetup/ChessboardDetect/contour_detect.py'),
                      'angleCloseDeg')]},
        loc('../../../../temp/kmeans/temp_img/opencvsetup/find_corner.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../temp/kmeans/temp_img/opencvsetup/find_corner.py'),
                      'contours_Detect1')]},
        loc('../../../../temp/kmeans/temp_img/opencvsetup/line_match.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/kmeans/temp_img/opencvsetup/line_match.py'),
                      'detector')]},
        loc('../../../../temp/kmeans/temp_img/opencvsetup/manualHough.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/kmeans/temp_img/opencvsetup/manualHough.py'),
                      'a')]},
        loc('../../../../temp/line.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../../temp/line.py'),
                             'minLineLength')]],
        'top-node': [('generic attribute',
                      loc('../../../../temp/line.py'),
                      'a')]},
        loc('../../../../temp/numpy_test.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/numpy_test.py'),
                      'x')]},
        loc('../../../../temp/rotate_rect.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../temp/rotate_rect.py'),
                      'drawRect')]},
        loc('../../../../temp/shiti.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/shiti.py'),
                      'b')]},
        loc('../../../../temp/test.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../temp/test.py'),
                      'A')]},
        loc('../../../../temp/text-detection-ctpn/ctpn/demo.py'): {'expanded'\
        '-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../temp/text-detection-ctpn/ctpn/demo.py'),
                      'ctpn')]},
        loc('../../../../temp/theano_cuda.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../../temp/theano_cuda.py'),
                             'x')]],
        'top-node': [('generic attribute',
                      loc('../../../../temp/theano_cuda.py'),
                      'f')]},
        loc('../../../../vue/mxshop/convert-utf8.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../vue/mxshop/convert-utf8.py'),
                      'all_files')]},
        loc('unknown:<untitled> #42'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('unknown:<untitled> #40'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('unknown:<untitled> #39'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('unknown:<untitled> #43'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('unknown:<untitled> #45'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('unknown:<untitled> #47'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('unknown:<untitled> #46'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('unknown:<untitled> #44'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('unknown:<untitled> #38'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('unknown:<untitled> #37'),
                      'gray')]},
        loc('unknown:<untitled> #41'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('snippets',
                               'tall',
                               0,
                               {'tree-states': {'__all__': [],
        u'c': [],
        u'django': [],
        u'html': [],
        u'py': []}}),
                              ('pylintpanel#02EFWRQK9X24',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [5,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.24044585987261147,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'Python Files',
                                  'fLocation': u'file:d:\\temp\\kmeans',
                                  'fRecursive': True,
                                  'fType': 'current-file'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': True,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 40,
                                       'fReplaceText': u' = ',
                                       'fReverse': False,
                                       'fSearchText': u'SIFT_create',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': True,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': True,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'print("',
                                       'fReverse': False,
                                       'fSearchText': u'rgb_to_sv',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [loc('manage.py')],
                       'filter': u'',
                       'recent-filters': None,
                       'sort-order': 'alpha',
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [('eval',
        u'remote')],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [(0,)],
                                      'top-node': (0,)}}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      1,
                      {'current-domain': 8}),
                     ('debug-probe',
                      'wide',
                      1,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 0L,
                       'sel-line-start': 0L,
                       'selection_end': 0L,
                       'selection_start': 0L,
                       'zoom': 0L}),
                     ('python-shell',
                      'wide',
                      1,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2L,
                       'sel-line-start': 157L,
                       'selection_end': 174L,
                       'selection_start': 174L,
                       'zoom': 0L}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('file:C:/Miniconda2/Lib/site-packages/paramiko/client.py'),
        {'attrib-starts': [('SSHClient',
                            46),
                           ('SSHClient._auth',
                            564)],
         'first-line': 706L,
         'folded-linenos': [],
         'sel-line': 714L,
         'sel-line-start': 28525L,
         'selection_end': 28590L,
         'selection_start': 28590L,
         'zoom': 0L},
        1535955695.941],
        [loc('../../../../temp/sufan2_monitor.py'),
         {'attrib-starts': [],
          'first-line': 62L,
          'folded-linenos': [],
          'sel-line': 72L,
          'sel-line-start': 2002L,
          'selection_end': 2086L,
          'selection_start': 2086L,
          'zoom': 0L},
         1535955712.415],
        [loc('file:C:/Miniconda2/Lib/site-packages/paramiko/client.py'),
         {'attrib-starts': [('SSHClient',
                             46),
                            ('SSHClient._auth',
                             564)],
          'first-line': 763L,
          'folded-linenos': [],
          'sel-line': 706L,
          'sel-line-start': 28223L,
          'selection_end': 28286L,
          'selection_start': 28286L,
          'zoom': 0L},
         1535968752.757],
        [loc('../../../../temp/sufan2_monitor.py'),
         {'attrib-starts': [('sftp_upload',
                             8)],
          'first-line': 11L,
          'folded-linenos': [],
          'sel-line': 21L,
          'sel-line-start': 596L,
          'selection_end': 596L,
          'selection_start': 596L,
          'zoom': 0L},
         1536027839.153],
        [loc('file:C:/Miniconda2/Lib/site-packages/paramiko/sftp_client.py'),
         {'attrib-starts': [('SFTPClient',
                             64),
                            ('SFTPClient.putfo',
                             655)],
          'first-line': 689L,
          'folded-linenos': [],
          'sel-line': 682L,
          'sel-line-start': 26178L,
          'selection_end': 26178L,
          'selection_start': 26178L,
          'zoom': 0L},
         1536028172.572],
        [loc('file:C:/Miniconda2/Lib/site-packages/paramiko/py3compat.py'),
         {'attrib-starts': [('b',
                             130)],
          'first-line': 31L,
          'folded-linenos': [],
          'sel-line': 48L,
          'sel-line-start': 1246L,
          'selection_end': 1246L,
          'selection_start': 1246L,
          'zoom': 0L},
         1536028175.034],
        [loc('../../../../temp/sufan2_monitor.py'),
         {'attrib-starts': [],
          'first-line': 95L,
          'folded-linenos': [],
          'sel-line': 103L,
          'sel-line-start': 3654L,
          'selection_end': 3698L,
          'selection_start': 3683L,
          'zoom': 0L},
         1536028637.236],
        [loc('file:C:/Miniconda2/Lib/site-packages/pathlib.py'),
         {'attrib-starts': [('PurePosixPath',
                             914)],
          'first-line': 910L,
          'folded-linenos': [],
          'sel-line': 914L,
          'sel-line-start': 29908L,
          'selection_end': 29936L,
          'selection_start': 29928L,
          'zoom': 0L},
         1536028816.157],
        [loc('../../../../temp/sufan2_monitor.py'),
         {'attrib-starts': [('sftp_upload',
                             8)],
          'first-line': 4L,
          'folded-linenos': [],
          'sel-line': 21L,
          'sel-line-start': 596L,
          'selection_end': 596L,
          'selection_start': 596L,
          'zoom': 0L},
         1536028937.53],
        [loc('file:C:/Miniconda2/Lib/site-packages/paramiko/sftp_client.py'),
         {'attrib-starts': [('SFTPClient',
                             64),
                            ('SFTPClient.put',
                             696)],
          'first-line': 709L,
          'folded-linenos': [],
          'sel-line': 726L,
          'sel-line-start': 27977L,
          'selection_end': 27977L,
          'selection_start': 27977L,
          'zoom': 0L},
         1536028950.99],
        [loc('../../../../temp/sufan2_monitor.py'),
         {'attrib-starts': [],
          'first-line': 97L,
          'folded-linenos': [],
          'sel-line': 102L,
          'sel-line-start': 3598L,
          'selection_end': 3598L,
          'selection_start': 3598L,
          'zoom': 0L},
         1536029028.19],
        [loc('file:C:/Miniconda2/Lib/ntpath.py'),
         {'attrib-starts': [('join',
                             62)],
          'first-line': 84L,
          'folded-linenos': [],
          'sel-line': 89L,
          'sel-line-start': 3051L,
          'selection_end': 3051L,
          'selection_start': 3051L,
          'zoom': 0L},
         1536029035.982],
        [loc('../../../../temp/sufan2_monitor.py'),
         {'attrib-starts': [],
          'first-line': 95L,
          'folded-linenos': [],
          'sel-line': 103L,
          'sel-line-start': 3615L,
          'selection_end': 3615L,
          'selection_start': 3615L,
          'zoom': 0L},
         1536031483.775],
        [loc('file:C:/Miniconda2/Lib/site-packages/pathlib.py'),
         {'attrib-starts': [('_is_wildcard_pattern',
                             59)],
          'first-line': 52L,
          'folded-linenos': [],
          'sel-line': 59L,
          'sel-line-start': 1303L,
          'selection_end': 1316L,
          'selection_start': 1316L,
          'zoom': 0L},
         1536031527.258],
        [loc('../../../../temp/sufan2_monitor.py'),
         {'attrib-starts': [],
          'first-line': 49L,
          'folded-linenos': [],
          'sel-line': 49L,
          'sel-line-start': 1373L,
          'selection_end': 1416L,
          'selection_start': 1404L,
          'zoom': 0L},
         1536067410.161],
        [loc('../../../../temp/sufan2_monitor.py'),
         {'attrib-starts': [],
          'first-line': 49L,
          'folded-linenos': [],
          'sel-line': 55L,
          'sel-line-start': 1611L,
          'selection_end': 1618L,
          'selection_start': 1618L,
          'zoom': 0L},
         1537166320.323],
        [loc('file:C:/Program Files (x86)/Wing IDE 6.1/resources/doc/en/TOC.idx'),
         {'displayed-index': -1,
          'viewer-state': {'history': [-1,
                                       29],
                           'history-pos': 0,
                           'index': -1,
                           'top': 0,
                           'top-left-pos': 0}},
         1537166330.37],
        [loc('file:C:/Program Files (x86)/Wing IDE 6.1/resources/doc/en/TOC.idx'),
         {'displayed-index': 29,
          'viewer-state': {'history': [-1,
                                       29],
                           'history-pos': 1,
                           'index': 29,
                           'top': 0,
                           'top-left-pos': 0}},
         1537166408.942],
        [loc('apps/users/adminx.py'),
         {'attrib-starts': [('EmailVerifyRecordAdmin',
                             8)],
          'first-line': 7L,
          'folded-linenos': [],
          'sel-line': 8L,
          'sel-line-start': 229L,
          'selection_end': 249L,
          'selection_start': 249L,
          'zoom': 0L},
         1537167235.916],
        [loc('file:C:/Program Files (x86)/Wing IDE 6.1/resources/doc/en/TOC.idx'),
         {'displayed-index': -1,
          'viewer-state': {'history': [-1,
                                       29],
                           'history-pos': 0,
                           'index': -1,
                           'top': 0,
                           'top-left-pos': 0}},
         1537167235.927]],
        20),
        'current-loc': loc('file:C:/Program Files (x86)/Wing IDE 6.1/resources/doc/en/TOC.idx'),
        'editor-state-list': [(loc('apps/users/adminx.py'),
                               {'attrib-starts': [('EmailVerifyRecordAdmin',
        8)],
                                'first-line': 7L,
                                'folded-linenos': [],
                                'sel-line': 8L,
                                'sel-line-start': 229L,
                                'selection_end': 249L,
                                'selection_start': 249L,
                                'zoom': 0L}),
                              (loc('file:C:/Program Files (x86)/Wing IDE 6.1/resources/doc/en/TOC.idx'),
                               {'displayed-index': 29,
                                'viewer-state': {'history': [-1,
        29],
        'history-pos': 1,
        'index': 29,
        'top': 0,
        'top-left-pos': 638}})],
        'has-focus': True,
        'locked': False},
        [loc('apps/users/adminx.py'),
         loc('file:C:/Program Files (x86)/Wing IDE 6.1/resources/doc/en/TOC.idx')]),
                               'open_files': [u'apps/users/adminx.py',
        u'C:/Program Files (x86)/Wing IDE 6.1/resources/doc/en/TOC.idx']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.313893653516295,
                           1: 0.5,
                           2: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5,
                                    1: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (600,
                         16,
                         848,
                         780)}]}
guimgr.recent-documents = [loc('apps/users/adminx.py')]
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('custom',
                        [u'DJANGO_SITENAME=Tutorial',
                         u'DJANGO_SETTINGS_MODULE=${DJANGO_SITENAME}.settings',
                         u'PYTHONSTARTUP_CODE=import django; django.setup()'])}
proj.ptype = 'django'
proj.pypath = {None: ('custom',
                      ['d:\\django\\drf\\tutorial\\10.DemoMxonline'])}
proj.vcs-system-config = ('prefs',
                          {'bzr': {'versioncontrol.bzr.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.bzr.executable': u'bzr'},
                           'cvs': {'versioncontrol.cvs.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.cvs.executable': u'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-'\
        'z3'},
                           'git': {'versioncontrol.git.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.git.executable': u'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-pro'\
        'ject-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': u'hg',
                                  'versioncontrol.hg.extra-global-args': '--'\
        'encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'n'\
        'ot-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': u'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.svn.executable': u'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': u'svnadmin'}})
testing.stored-results = (1,
                          [],
                          {})
